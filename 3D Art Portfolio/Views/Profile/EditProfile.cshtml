@model _3D_Art_Portfolio.ViewModels.EditProfileViewModel

@{
    ViewBag.Title = "Edit Profile";
}
<div class="marginTop" style="width:100%;">
    <div class="profileInfoContainter roundedCorners whiteBg text-center" style="width:50%; margin:0 auto;">
        <h2 style="margin-top:0px">Edit your profile information</h2>

        @using (Html.BeginForm("EditProfile", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr style="margin-top:0px" />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.UserId)

                <img class="smallerProfilePicture" alt="Your profile picture" src="@Url.Content(Model.ProfilePicture)" id="ProfilePicture" />

                <div class="form-group">
                    @Html.Label("Profile Picture", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="file" id="ImageUpload" name="ImageUpload" class="custom-file-input" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("User Name", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>


                <hr style="margin-top:0;" />
                <div class="form-group">
                    <div class="col-md-6">
                        <input style="width:200px;" id="submit" type="submit" value="Save Changes" class="btn btn-success btn-lg" />
                    </div>
                    <div class="col-md-6">
                        <a style="width:200px;" href="/Profile/Index" class="btn btn-primary btn-lg">Back to profile</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#ImageUpload").change(function () {
                var formData = new FormData();
                var totalFiles = document.getElementById("ImageUpload").files.length;
                if (totalFiles == 0)
                    return;
                var file = document.getElementById("ImageUpload").files[0];
                formData.append("ImageUpload", file);
                $.ajax({
                    type: "POST",
                    url: '/Profile/ProfileImageUpload',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success) {
                            $("#ProfilePicture").attr("src", response.newImagePath);
                        }
                    },
                    error: function (response) {
                        console.log("error");
                    }
                }).done(function () {
                }).fail(function (xhr, status, errorThrown) {
                });
            });
        });
    </script>
}

